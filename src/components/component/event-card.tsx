/**
 * This code was generated by v0 by Vercel.
 * @see https://v0.dev/t/kST30UMLXoc
 */
import {
  CardTitle,
  CardDescription,
  CardHeader,
  CardContent,
  CardFooter,
  Card,
} from "@/components/ui/card";
import Image from "next/image";
import { Button } from "../ui/button";
import { useState, useEffect } from "react";
import { Bounce, ToastContainer, toast } from "react-toastify";

export interface eventDetails {
  eventId: any;
  eventName: any;
  eventDescription: any;
  eventHost: any;
  eventLocation: any;
  eventDate: any;
  eventStart: any;
  eventEnd: any;
  capacity: any;
  // joinEvent(eventId: any): void;
}

export default function EventCard({
  eventId,
  eventName,
  eventDescription,
  eventHost,
  eventLocation,
  eventDate,
  eventStart,
  eventEnd,
  capacity,
  joinEvent,
}: any) {
  return (
    <div>
      <Card className="w-full max-w-sm rounded-xl border ">
        <CardHeader className="p-4">
          <CardTitle className="text-2xl">{eventName}</CardTitle>
          <CardDescription>{eventDescription}</CardDescription>
        </CardHeader>
        {/* Only show the content if screen size is medium to large */}
        <CardContent className="hidden md:flex md:items-center md:p-4 md:gap-4 md:border-t">
          <div className="flex items-center gap-2">
            <Image
              alt="Host"
              className="rounded-full"
              height="40"
              src="https://img.clerk.com/eyJ0eXBlIjoicHJveHkiLCJzcmMiOiJodHRwczovL2ltYWdlcy5jbGVyay5kZXYvb2F1dGhfZ29vZ2xlL2ltZ18yZHM3QVFTYlNVSUJjdlpEZ1UyTWxjekJJVXkifQ?width=160"
              style={{
                aspectRatio: "40/40",
                objectFit: "cover",
              }}
              width="40"
            />
            <div className="leading-none">
              <h3 className="font-medium">Host</h3>
              <p className="text-sm text-gray-500 dark:text-gray-400">
                {eventHost}
              </p>
            </div>
          </div>
          <div className="flex items-center gap-2 ml-4">
            {[1, 2, 3, 4, 5].map((index) => (
              <Image
                key={index}
                title="Test"
                alt={`User ${index}`}
                className={`rounded-full ring-2 ring-white`}
                height={"40"}
                src="https://img.clerk.com/eyJ0eXBlIjoicHJveHkiLCJzcmMiOiJodHRwczovL2ltYWdlcy5jbGVyay5kZXYvb2F1dGhfZ29vZ2xlL2ltZ18yZHM3QVFTYlNVSUJjdlpEZ1UyTWxjekJJVXkifQ?width=160"
                style={{
                  aspectRatio: "40/40",
                  objectFit: "cover",
                  marginLeft: `-${7 * 2}px`,
                }}
                width={"40"}
              />
            ))}
            {/* total numbers of users join */}
            <span className="text-2xl">+32</span>
          </div>
        </CardContent>
        <CardFooter className="p-4 flex justify-between items-center">
          <div className="grid grid-cols-2 gap-1">
            <div className="text-sm ">
              <p>
                <span className="font-medium">Location</span>:{" "}
                <span>{eventLocation}</span>
              </p>
              <p>
                <span className="font-medium">Event Date</span>:{" "}
                <span>{eventDate} </span>
              </p>
              <p>
                <span className="font-medium">Starts</span>:{" "}
                <time>{eventStart}</time>
              </p>
              <p>
                <span className="font-medium">Ends</span>:{" "}
                <time>{eventEnd}</time>
              </p>
            </div>
            <div className="flex items-end gap-1 pl-9">
              <UserPlusIcon className="w-5 h-5" />
              <span className="text-2xl font-semibold">{capacity}</span>
            </div>
            <div className="col-span-2">
              <Button className="w-full" onClick={() => joinEvent(eventId)}>
                Join Event
              </Button>
            </div>
          </div>
        </CardFooter>
      </Card>
    </div>
  );
}

function UserPlusIcon(props: any) {
  return (
    <svg
      {...props}
      xmlns="http://www.w3.org/2000/svg"
      width="24"
      height="24"
      viewBox="0 0 24 24"
      fill="none"
      stroke="currentColor"
      strokeWidth="2"
      strokeLinecap="round"
      strokeLinejoin="round"
    >
      <path d="M16 21v-2a4 4 0 0 0-4-4H6a4 4 0 0 0-4 4v2" />
      <circle cx="9" cy="7" r="4" />
      <line x1="19" y1="8" x2="19" y2="14" />
      <line x1="22" y1="11" x2="16" y2="11" />
    </svg>
  );
}
